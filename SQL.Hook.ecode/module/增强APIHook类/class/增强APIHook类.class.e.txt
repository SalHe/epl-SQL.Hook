.版本 2

.程序集 增强APIHook类, , 公开, 利用dtcser的"易语言取汇编指令长度模块源码"增强了一下,可以自动判断头部代码长度,可无需停止Hook直接调用,可以多级JmpHook.
.子程序 检测是否已被Hook, 整数型, 公开, 检测前5个字节是否被JmpHook(是否为Jmp xxxxxxxx).返回0未Hook,返回1已Hook,返回2被自身Hook
    .参数 DllName, 文本型, , 模块名称,必填,以便在安装Hook之前检测.
    .参数 FuncName, 文本型, , 函数名称,必填,以便在安装Hook之前检测.注意:务必区分大小写,否则会找不到函数

    

.子程序 安装HookByName, 逻辑型, 公开, 根据函数名称安装Hook,成功真,失败假.参数4默认真(是否立即启动);参数5默认假(C方式调用);参数6默认假(多级Jmp)
    .参数 DllName, 文本型, , 模块名称
    .参数 FuncName, 文本型, , 函数名称.注意:务必区分大小写,否则会找不到函数
    .参数 NewProc, 整数型, , 新函数过程地址*指针
    .参数 StartAtOnce, 逻辑型, 可空, 默认真,是否立即Hook
    .参数 __Cdecl, 逻辑型, 可空, 默认假,真为__cdecl调用
    .参数 MultiJmp, 逻辑型, 可空, 默认假,多级Jmp方式Hook,为真的时候才判断前5个字节中的第一个是不是E9,但是别人的Hook可能会破坏你的Hook!(如果别人的Hook是传统的暂停再继续,也就是说反复还原代码再修改代码,那就没辙了)

    

.子程序 安装HookByAddr, 逻辑型, 公开, 根据函数地址安装Hook,成功真,失败假.参数3默认真(是否立即启动);参数4默认假(C方式调用);参数5默认假(多级Jmp)
    .参数 FunctionAddr, 整数型, , 原始函数地址*指针
    .参数 NewProc, 整数型, , 新函数过程地址*指针
    .参数 StartAtOnce, 逻辑型, 可空, 默认真,是否立即Hook
    .参数 __cdecl, 逻辑型, 可空, 默认假,真为__cdecl调用
    .参数 MultiJmp, 逻辑型, 可空, 同 安装HookByName 解释

    

.子程序 卸载Hook, 逻辑型, 公开, 如果是被强制作为C调用,可选择是否恢复,默认恢复.注意:为了直接调用返回值,卸载成功返回假,失败返回真!!!
    .参数 完全卸载, 逻辑型, 可空, 默认真,清理生成的函数头信息
    .参数 恢复调用, 逻辑型, 可空, 默认真,恢复原来的__stdcall方式调用,必须在Hook时指定强制C方式并且成功修改为C方式才有效

    

.子程序 继续Hook, 逻辑型, 公开, 传统的继续/开始Hook,成功返回真,失败返回假.若Hook被卸载,返回假
    

.子程序 暂停Hook, 逻辑型, 公开, 传统的暂停/还原Hook,成功返回真,失败返回假.并不还原C方式调用的代码以及内存属性等
    

.子程序 函数原内存地址, 整数型, 公开, 返回函数原始的位置.注意:该方法的返回值只有当Hook被暂停后才可以调用,否则调用将导致死循环
    

.子程序 函数新过程地址, 整数型, 公开, 返回函数被Hook之后跳到的新过程地址,外部实际上就知道.没多大用处,删掉也罢
    

.子程序 新函数头, 整数型, 公开, 返回新生成的函数头部地址,无需暂停Hook即可调用,可防止漏掉Hook,并且不会造成死循环.Hook卸载后,若不清除函数头,则可继续使用
    

.子程序 清理新函数头, 逻辑型, 公开, 清理新函数头之前必须先卸载Hook,否则不会生效!成功返回真,否则假
    

.子程序 调用原函数, 整数型, 公开, 失败返回0.自动选择被调用地址,若新函数头生成失败,自动选择原始地址调用.可直接无缝调用原函数(支持_CDECL和_stdcall),参数必须都为整数型,非整数型请自行取址.
    .参数 参数1, 整数型, 可空
    .参数 参数2, 整数型, 可空
    .参数 参数3, 整数型, 可空
    .参数 参数4, 整数型, 可空
    .参数 参数5, 整数型, 可空
    .参数 参数6, 整数型, 可空
    .参数 参数7, 整数型, 可空
    .参数 参数8, 整数型, 可空
    .参数 参数9, 整数型, 可空
    .参数 参数10, 整数型, 可空
    .参数 参数11, 整数型, 可空
    .参数 参数12, 整数型, 可空
    .参数 参数13, 整数型, 可空
    .参数 参数14, 整数型, 可空
    .参数 参数15, 整数型, 可空

    

